{"noir_version":"0.29.0+2da28997dbedce4a00d2162eddb57564bdb23546","hash":3760794646472107877,"abi":{"parameters":[{"name":"x1","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"private"},{"name":"x2","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"private"},{"name":"y1","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"private"},{"name":"y2","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"private"},{"name":"d","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"public"}],"param_witnesses":{"d":[{"start":4,"end":5}],"x1":[{"start":0,"end":1}],"x2":[{"start":1,"end":2}],"y1":[{"start":2,"end":3}],"y2":[{"start":3,"end":4}]},"return_type":null,"return_witnesses":[]},"bytecode":"H4sIAAAAAAAA/71XzW7CMAxuChRoGRKXnXboeIKkP9DeuO0B9gR0FA0JBGNhaG8/EDZ4oZ0m6mKpSpw4zpfPzk+FdZL+4XuEujh8NtR9ogtDtw29YehN0Kk0oJxAGcpRFOXjIFehmsogzZJYRnE2SlSi4iSeBUkY5kmUjNMsHctURWGu5nEazuVJqC9ZTZRgxNXiwyWRzxbhUxg8ymqiWuBfMMfHqYEH5w55ZTNy22DE1a6Bz3aNedUG/9x51amBh84/8kpWE8W4H1SHkc9uDXx2gU/HyC0q3PnGvQ4Utwg/F2gkzCWE0UuYis08d5MxidzquBRWCpbO5pvy6kHZs+4Q4J5V/wlTV0Cr+nrgW6P8i78bcQaAU3mMa+4xxpWBv8LNxX0zexbvvsH4Ng3M+MchCvpbpI63zzOUU63z1Ub7eu1/7jK9nb5pf7/Q7/76K9/Ol+v90ahTPmi1W+rFZvl9Pci9ZabeLTP1wfjpetB0NjPs8bTDkw7XZkGgJlCXVSSSgUOiYJ6kNunD0gdM59MY2vHJiJhFk/g4yIC04TwuGfOS69ePraYQMIdom2/odomNd0F29kNhY9/x5YHUOgV+y/SjDK3LHzbFMLR+PwQa0GYZdoLUbeKvzEaU+PEKcA4K2n4ASPYp3TYQAAA=","debug_symbols":"ldNLCoMwEAbgu8xaSp6+rlJKSTWWgETRWCji3Rtbs2jMZnaZJB9M8jMrtPqxPO/GdsMM9XWFfmiUM4P11QryuzWPyu7V7NTkoKZMZqBt61ecbRl0ptdQi3y7ZZBjQZEEogxAygiUWFAlQUEDKMoIUIIWNCkqcQhGaCwYWvCUYIwFwU9CoEUyby74IXhOYpGjRTJxQUJXgp5+t0SLCisYQQuK7kpekm+XPKQuxX8ivnipyahHr/dx3M8W24Tp9KV7j78Tf/cD","file_map":{"46":{"source":"\nfn main(x1: u32, x2: u32, y1: u32, y2: u32, d: pub u32) {\n\n    // distance = sqrt( (x2 - x1)^2 + (y2 - y1)^2 )\n    let dx = x2 - x1;\n    let dx2 = dx * dx;\n\n    let dy = y2 - y1;\n    let dy2 = dy * dy;\n\n    let dx2_dy2 = dx2 + dy2;\n\n    // instead of sqrt, we square distance\n    // let maxdist = d * d;\n    let maxdist = d;\n\n    let sqrtd = get_sqrt(dx2_dy2);\n    // let sqrtd = dx2_dy2;\n\n    assert(sqrtd <= maxdist);\n\n}\n\n\n#[oracle(GetSqrt)]\nunconstrained fn sqrt(d: u32) -> u32 { }\n\nunconstrained fn get_sqrt(d: u32) -> u32 {\n    sqrt(d)\n}\n\n\n#[test]\nfn test_main() {\n    main(1, 4, 1, 5, 49);\n\n}\n\n#[test]\nfn test_main_oracle() {\n    let maxdist = get_sqrt(222);\n    main(1, 4, 1, 5, maxdist);\n\n}\n\n\n","path":"/Users/peita/Dev/aztec/movement/circuits-radius/src/main.nr"}},"names":["main"]}